// Code generated by Kitex v0.5.2. DO NOT EDIT.

package viewerservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	viewersapi "server/kitex_gen/viewersapi"
)

func serviceInfo() *kitex.ServiceInfo {
	return viewerServiceServiceInfo
}

var viewerServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "ViewerService"
	handlerType := (*viewersapi.ViewerService)(nil)
	methods := map[string]kitex.MethodInfo{
		"getuniqueviewernames": kitex.NewMethodInfo(getuniqueviewernamesHandler, newViewerServiceGetuniqueviewernamesArgs, newViewerServiceGetuniqueviewernamesResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "viewersapi",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.5.2",
		Extra:           extra,
	}
	return svcInfo
}

func getuniqueviewernamesHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*viewersapi.ViewerServiceGetuniqueviewernamesArgs)
	realResult := result.(*viewersapi.ViewerServiceGetuniqueviewernamesResult)
	success, err := handler.(viewersapi.ViewerService).Getuniqueviewernames(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newViewerServiceGetuniqueviewernamesArgs() interface{} {
	return viewersapi.NewViewerServiceGetuniqueviewernamesArgs()
}

func newViewerServiceGetuniqueviewernamesResult() interface{} {
	return viewersapi.NewViewerServiceGetuniqueviewernamesResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Getuniqueviewernames(ctx context.Context, req *viewersapi.Request) (r *viewersapi.Response, err error) {
	var _args viewersapi.ViewerServiceGetuniqueviewernamesArgs
	_args.Req = req
	var _result viewersapi.ViewerServiceGetuniqueviewernamesResult
	if err = p.c.Call(ctx, "getuniqueviewernames", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
